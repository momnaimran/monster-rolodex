{"version":3,"sources":["components/card/card.component.jsx","components/cardlist/cardlist.component.jsx","components/search/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","eventhandler","type","onChange","App","state","searchfield","fetch","then","value","json","users","setState","catch","error","console","log","this","filteredMonsters","filter","toLowerCase","includes","e","target","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAEaA,G,kBAAO,SAAAC,GAAK,OAEnB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BACCL,EAAMI,QAAQE,OAEf,4BAAIN,EAAMI,QAAQG,aCLXC,EAAU,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACED,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC3B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJVM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OAErB,uBAAOZ,UAAU,SAASa,KAAK,SAC9BF,YAAaA,EACdG,SAAUF,MC4BCG,E,kDA7Bb,aAAc,IAAD,8BACT,gBACKC,MACL,CACER,SACA,GACAS,YAAa,IANN,E,gEAUZ,IAAD,OACEC,MAAM,8CAA8CC,MAAK,SAAAC,GAAK,OAAIA,EAAMC,UAAQF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,SAASc,OAASE,OAAM,SAAAC,GAAK,OAAGC,QAAQC,IAAI,uB,+BAG1J,IAAD,SACiCC,KAAKZ,MAA7BR,EADT,EACSA,SAAUS,EADnB,EACmBA,YACXY,EAAkBrB,EAASsB,QAAO,SAAA3B,GAAO,OAAGA,EAAQE,KAAK0B,cAAcC,SAASf,EAAYc,kBAClG,OACE,sBAAK/B,UAAU,MAAf,UACA,oDACD,cAAC,EAAD,CAAWW,YAAY,iBACvBC,aAAc,SAAAqB,GAAM,EAAKV,SAAU,CAACN,YAAagB,EAAEC,OAAOd,WACzD,cAAC,EAAD,CAAWZ,SAAUqB,W,GAvBTM,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cde3760c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card-style.css';\r\nexport const Card = props =>\r\n(\r\n      <div className='card-container'>\r\n      <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n      <h2>\r\n      {props.monster.name}\r\n      </h2>\r\n      <p>{props.monster.email}</p>\r\n      </div>\r\n);","import React from 'react';\r\nimport './cardlist.component.css';\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList= props => (\r\n   <div className='card-list'>  \r\n    {props.monsters.map(monster => (\r\n    <Card key={monster.id} monster={monster}/>))}\r\n    </div>\r\n);","import React from 'react';\r\nimport './search-box.style.css'\r\n\r\nexport const SearchBox = ({placeholder, eventhandler}) =>\r\n(\r\n    <input className='search' type='search'\r\n     placeholder={placeholder} \r\n    onChange={eventhandler} />\r\n)","import React, {Component} from 'react';\nimport './App.css';\nimport {CardList} from './components/cardlist/cardlist.component';\nimport { SearchBox } from \"./components/search/search-box\";\n\nclass App extends Component{\n  constructor(){\n      super();\n      this.state=\n      {\n        monsters:\n        [],\n        searchfield: ''\n      };\n  }\n  componentDidMount()\n  {\n    fetch('https://jsonplaceholder.typicode.com/users').then(value => value.json()).then(users => this.setState({monsters:users})).catch(error=> console.log('we are screwed'));\n  }\n  render()\n  {\n    const {monsters, searchfield}= this.state;\n    const filteredMonsters= monsters.filter(monster=> monster.name.toLowerCase().includes(searchfield.toLowerCase()) );\n    return (\n      <div className=\"App\">\n      <h1> Monsters Rolodex </h1>\n     <SearchBox placeholder='Search Mosters' \n     eventhandler={e => {this.setState( {searchfield: e.target.value})}}/>\n      <CardList  monsters={filteredMonsters}/>\n       </div>\n  );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}